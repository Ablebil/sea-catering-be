services:
  app:
    build: .
    restart: unless-stopped
    ports:
      - "8080:8000"
    depends_on:
      db:
        condition: service_healthy
  db:
    image: "postgres:alpine"
    restart: unless-stopped
    environment:
      POSTGRES_PORT: ${DB_PORT}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
      PGDATA: /data/postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 1s
      timeout: 5s
      retries: 10
    volumes:
      - dbdata:/data/postgres
  redis:
    image: "redis:alpine"
    restart: unless-stopped
    environment:
      REDIS_USERNAME: ${REDIS_USERNAME}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    healthcheck:
      test: ["CMD-SHELL", "redis-cli", "-a", "${REDIS_PASSWORD}", "--raw", "incr", "ping"]
      interval: 1s
      timeout: 5s
      retries: 10
    command: redis-server --requirepass ${REDIS_PASSWORD}
    ports:
      - "6379:6379"
volumes:
  dbdata: